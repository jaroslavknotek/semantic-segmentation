[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta" 


[project]
name = "semseg" 
version = "0.0.1"  

description = "Project used for semantic/instance segmentation of images"

readme = "README.md"

requires-python = ">=3.10"

license = {file = "LICENSE.txt"}

keywords = ["semantic","segmentation"]

authors = [
  {name = "Jry", email = "knotekjaroslav@email.cz" }
]

# maintainers = [
#   {name = "A. Great Maintainer", email = "maintainer@example.com" }
# ]

classifiers = [
  # How mature is this project? Common values are
  #   3 - Alpha
  #   4 - Beta
  #   5 - Production/Stable
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "Topic :: Software Development :: Build Tools",
  "License :: OSI Approved :: MIT License",

  # Specify the Python versions you support here. In particular, ensure
  # that you indicate you support Python 3. These classifiers are *not*
  # checked by "pip install". See instead "requires-python" key in this file.
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3 :: Only",
]

dependencies = [
  "torch",
  "tqdm",
  "albumentations",
  "opencv-python",
  "imageio",
  "numpy==1.26.0",
  "pandas",
  "scipy",
  "scikit-learn",
  "segmentation-models-pytorch",
  "matplotlib",
]

# List additional groups of dependencies here (e.g. development
# dependencies). Users will be able to install these using the "extras"
# syntax, for example:
#
#   $ pip install sampleproject[dev]
#
# Optional dependencies the project provides. These are commonly 
# referred to as "extras". For a more extensive definition see:
# https://packaging.python.org/en/latest/specifications/dependency-specifiers/#extras
[project.optional-dependencies]
dev = ["check-manifest","pytest"]
test = ["coverage"]

[project.urls]
"Homepage" = "https://github.com/jaroslavknotek/semantic-segmentation/README.md"
"Bug Reports" = "https://github.com/jaroslavknotek/semantic-segmentation/issues"
"Source" = "https://github.com/jaroslavknotek/semantic-segmentation"

[tool.setuptools.packages.find]
where = ["src"]
include = ["semseg"]

# pyproject.toml
[tool.pytest.ini_options]
asyncio_mode = "auto"
minversion = "6.0"
addopts = "-ra -q"
testpaths = [
    "tests",
    "integration",
]
